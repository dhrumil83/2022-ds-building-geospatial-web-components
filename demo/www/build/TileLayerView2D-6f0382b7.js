import { c as s, E, V as r, e, f as d$1, i as i$1, s as s$2, a8 as g } from './vec2f32-96e18450.js';
import { r as r$1, o, n } from './imageUtils-bf82ae10.js';
import { l, u } from './LayerView-13e16160.js';
import { h } from './TileStore-29b58dac.js';
import { e as e$1 } from './TileKey-a82c8402.js';
import { p, r as r$2 } from './TileStrategy-7c347526.js';
import { i as i$2 } from './RefreshableLayerView-dd3fccc1.js';
import { s as s$1, a } from './drapedUtils-2bf6e856.js';
import './BitmapTileContainer-d8cc0076.js';
import './esri-ds2022-map-viewer-eaf1b8e9.js';
import './index-5d892dab.js';
import './CollectionFlattener-52fb1d3d.js';
import './HandleOwner-e0d82d22.js';
import './Handles-b3021138.js';
import './reactiveUtils-5f9c851d.js';
import './watchUtils-be3a5f50.js';
import './TablesMixin-6baefa72.js';
import './MultiOriginJSONSupport-4c0182cb.js';
import './iteratorUtils-07a71e8c.js';
import './workers-2517158a.js';
import './widget-443283ac.js';
import './uuid-917a1a17.js';
import './UniqueValueRenderer-59efe757.js';
import './VisualVariablesMixin-f7c8cd7e.js';
import './colorRamps-44ecefda.js';
import './diffUtils-c0512c3e.js';
import './styleUtils-c0536af9.js';
import './executeQueryJSON-f8f32f18.js';
import './utils-502612a2.js';
import './scaleUtils-009949b4.js';
import './floorFilterUtils-a09da11b.js';
import './query-9613ab47.js';
import './normalizeUtils-11d276d0.js';
import './arcgisLayerUrl-e91052aa.js';
import './pbfQueryUtils-88213282.js';
import './pbf-b57823c1.js';
import './OptimizedFeature-e99a2ed3.js';
import './OptimizedFeatureSet-27736f1f.js';
import './queryZScale-a6b03c33.js';
import './zscale-075392a1.js';
import './Query-f41de01f.js';
import './TimeExtent-ef5feff1.js';
import './Field-9ae21d09.js';
import './fieldType-40139de8.js';
import './FeatureSet-d05d7baa.js';
import './TopFeaturesQuery-21746d72.js';
import './QueryTask-427a128b.js';
import './featureConversionUtils-7cc244e3.js';
import './Task-9d37536c.js';
import './languageUtils-f4f0b3a9.js';
import './_commonjsHelpers-321aa363.js';
import './number-7fa2c19d.js';
import './FeatureLayer-41ac22f1.js';
import './DictionaryRenderer-148f4879.js';
import './LRUCache-6d357264.js';
import './MemCache-e9a0d4f9.js';
import './jsonUtils-e58c15d9.js';
import './HeightModelInfo-533ad021.js';
import './APIKeyMixin-ee03b0ff.js';
import './ArcGISService-bc55d6c8.js';
import './BlendLayer-9582dc10.js';
import './mat4-59c51b41.js';
import './_commonjsHelpers-020ca939.js';
import './CustomParametersMixin-5d83f8a3.js';
import './labelingInfo-653f3665.js';
import './FeatureReductionCluster-303b0389.js';
import './commonProperties-73952058.js';
import './OperationalLayer-f90d3a65.js';
import './OrderedLayer-84b64b6e.js';
import './PortalLayer-f5d3d653.js';
import './RefreshableLayer-7eca1761.js';
import './ScaleRangeLayer-cc4d317e.js';
import './TemporalLayer-8778bd70.js';
import './TimeInfo-753c74d8.js';
import './FeatureType-3ed2e985.js';
import './fieldProperties-7830ae70.js';
import './FieldsIndex-a573ae50.js';
import './LayerFloorInfo-742e79c9.js';
import './styleUtils-ccdaf8b0.js';
import './popupUtils-0b9004db.js';
import './utils-c0e0f562.js';
import './ItemCache-9513db1b.js';
import './utils-86b5682d.js';
import './TileInfo-6783c707.js';
import './GraphicsCollection-0a597532.js';
import './Scheduler-00477592.js';
import './projection-f0a42b06.js';
import './unitBezier-0f2e6a45.js';
import './vec2f64-503345b4.js';
import './mat3-4c6d002d.js';
import './screenshotUtils-ea21e5e9.js';
import './capabilities-3951b735.js';
import './Bitmap-c04369b7.js';
import './Container-a9726ab4.js';
import './Texture-877bd154.js';
import './TileContainer-e8755e5e.js';
import './Utils-b64a9f45.js';
import './number-237bc27c.js';
import './WGLContainer-3803447f.js';
import './definitions-08701efa.js';
import './VertexArrayObject-8085edfb.js';
import './ShaderCompiler-0c24df35.js';
import './config-768959de.js';
import './GeometryUtils-09c2f88c.js';
import './MaterialKey-55ff2aea.js';
import './pixelUtils-56825141.js';
import './earcut-05cd758b.js';
import './quickselect-ccfd8cff.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
const i=i=>{let c=class extends i{async fetchPopupFeatures(e,s$2){const{layer:a}=this;if(!e)return Promise.reject(new s("tilelayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:a}));if("tile"!==a.type)return Promise.reject(new s("tilelayerview:fetchPopupFeatures","Layer type should be 'tile'",{type:a.type}));const i=this.get("view.scale"),c=a.allSublayers.toArray().filter((e=>{const r=0===e.minScale||i<=e.minScale,t=0===e.maxScale||i>=e.maxScale;return e.popupTemplate&&e.popupEnabled&&e.visible&&r&&t}));return E(c.map((async r$1=>{const o=r$1.createQuery(),a=r(s$2)?s$2.event:null,i=s$1({renderer:r$1.renderer,event:a});o.geometry=this.createFetchPopupFeaturesQueryGeometry(e,i),o.outFields=await r$1.popupTemplate.getRequiredFields();return (await r$1.queryFeatures(o)).features}))).then((e=>[].concat(...e.map((e=>e.value)).filter(Boolean))))}};return e([d$1()],c.prototype,"layer",void 0),c=e([i$1("esri.layers.mixins.TileLayerView")],c),c};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
const d=s$2.getLogger("esri.views.2d.layers.TileLayerView2D"),_=[0,0];let I=class extends(i(i$2(r$1(l(u))))){constructor(){super(...arguments),this._tileStrategy=null,this._fetchQueue=null,this.layer=null;}initialize(){const e=this.layer.tileInfo,i=e&&e.spatialReference;let s$1;i||(s$1=new s("layerview:tiling-information-missing","The layer doesn't provide tiling information",{layer:this.layer})),i.equals(this.view.spatialReference)||(s$1=new s("layerview:spatial-reference-incompatible","The spatial reference of this layer does not meet the requirements of the view",{layer:this.layer})),this.watch("resampling",(()=>{this.doRefresh();})),s$1&&this.addResolvingPromise(Promise.reject(s$1));}get resampling(){return !("resampling"in this.layer)||!1!==this.layer.resampling}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume(),this.notifyChange("updating");}attach(){const e="tileServers"in this.layer?this.layer.tileServers:null;this._tileInfoView=new h(this.layer.tileInfo,this.layer.fullExtent),this._fetchQueue=new p({tileInfoView:this._tileInfoView,concurrency:e&&10*e.length||10,process:(e,t)=>this.fetchTile(e,t)}),this._tileStrategy=new r$2({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),this.requestUpdate(),this.container.requestRender(),super.attach();}detach(){super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null;}moveStart(){this.requestUpdate();}viewChange(){this.requestUpdate();}moveEnd(){this.requestUpdate();}createFetchPopupFeaturesQueryGeometry(e,t){return a(e,t,this.view)}async doRefresh(){this.updateRequested||this.suspended||(this._fetchQueue.reset(),this._tileStrategy.tiles.forEach((e=>this._enqueueTileFetch(e))),this.notifyChange("updating"));}isUpdating(){var e;return (null==(e=this._fetchQueue)?void 0:e.length)>0}acquireTile(e){const t=this._bitmapView.createTile(e),i=t.bitmap;return [i.x,i.y]=this._tileInfoView.getTileCoords(_,t.key),i.resolution=this._tileInfoView.getTileResolution(t.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._enqueueTileFetch(t),this._bitmapView.addChild(t),this.requestUpdate(),t}releaseTile(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once("detach",(()=>e.destroy())),this.requestUpdate();}async fetchTile(e,t={}){const i="tilemapCache"in this.layer?this.layer.tilemapCache:null,{signal:r,resamplingLevel:a=0}=t;if(!i)try{return await this._fetchImage(e,r)}catch(c){if(!g(c)&&!this.resampling)return o(this._tileInfoView.tileInfo.size);if(a<3){const i=this._tileInfoView.getTileParentId(e.id);if(i){const s=new e$1(i),r=await this.fetchTile(s,{...t,resamplingLevel:a+1});return n(this._tileInfoView,r,s,e)}}throw c}const l=new e$1(0,0,0,0);let o$1;try{if(await i.fetchAvailabilityUpsample(e.level,e.row,e.col,l,{signal:r}),l.level!==e.level&&!this.resampling)return o(this._tileInfoView.tileInfo.size);o$1=await this._fetchImage(l,r);}catch(c){if(g(c))throw c;o$1=await this._fetchImage(e,r);}return this.resampling?n(this._tileInfoView,o$1,l,e):o$1}async _enqueueTileFetch(e){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key);e.bitmap.source=t,e.bitmap.width=this._tileInfoView.tileInfo.size[0],e.bitmap.height=this._tileInfoView.tileInfo.size[1],e.once("attach",(()=>this.requestUpdate()));}catch(t){g(t)||d.error(t);}this.requestUpdate();}}async _fetchImage(e,t){return this.layer.fetchTile(e.level,e.row,e.col,{signal:t})}};e([d$1()],I.prototype,"resampling",null),I=e([i$1("esri.views.2d.layers.TileLayerView2D")],I);const T=I;

export default T;
