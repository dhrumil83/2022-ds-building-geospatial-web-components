import { S, C as C$1, k as r, t as t$1, aO as a, bA as b, bC as C$2, e, d as d$1, i as i$1 } from './intl-f9bcf179.js';
import { u as u$1 } from './Handles-c08f164d.js';
import { a1 as M$1, a7 as g, ac as M$2, a2 as k } from './vec2f32-a88eee2e.js';
import { O, Q } from './projection-60b2cc57.js';
import { b as b$1, g as g$2, d } from './kmlUtils-30685127.js';
import { o } from './utils-8e500178.js';
import { c } from './GraphicsCollection-29817947.js';
import { g as g$1 } from './Bitmap-1fa3028e.js';
import { t } from './BitmapContainer-1de0f60a.js';
import { l, u } from './LayerView-93fcaba5.js';
import { i } from './GraphicContainer-c60cab01.js';
import { i as it } from './BaseGraphicContainer-b1371a0a.js';
import './JSONSupport-add604e3.js';
import './mat4-ae511675.js';
import './zscale-41674b48.js';
import './jsonUtils-d380cab0.js';
import './UniqueValueRenderer-e0928c5a.js';
import './VisualVariablesMixin-8a22cf6b.js';
import './colorRamps-76de530b.js';
import './diffUtils-090e743c.js';
import './styleUtils-4a488c71.js';
import './DictionaryRenderer-3a040527.js';
import './LRUCache-257bc9a6.js';
import './MemCache-cd2cb7cb.js';
import './aliasOf-93c38510.js';
import './FeatureSet-4fb958ac.js';
import './Field-c0076075.js';
import './fieldType-064db2a2.js';
import './scaleUtils-88e9eb11.js';
import './floorFilterUtils-a09da11b.js';
import './HandleOwner-8815c4dd.js';
import './reactiveUtils-7b2ef76d.js';
import './watchUtils-47c42485.js';
import './mat3-5a3bab08.js';
import './esri-ds2022-map-viewer-35c68a1d.js';
import './index-5d892dab.js';
import './CollectionFlattener-bcf03412.js';
import './TablesMixin-ae9b8027.js';
import './MultiOriginJSONSupport-9580fd5e.js';
import './iteratorUtils-07a71e8c.js';
import './workers-b2f67d28.js';
import './accessibleHandler-756590a8.js';
import './uuid-917a1a17.js';
import './executeQueryJSON-99aa27d5.js';
import './query-f9bc0945.js';
import './normalizeUtils-4a0b810f.js';
import './arcgisLayerUrl-44d1a3ba.js';
import './pbfQueryUtils-cdfd4767.js';
import './pbf-82f66092.js';
import './OptimizedFeature-b2ac674d.js';
import './OptimizedFeatureSet-27736f1f.js';
import './queryZScale-5052a726.js';
import './Query-689827fc.js';
import './TimeExtent-c4789fb1.js';
import './TopFeaturesQuery-1ab1fe83.js';
import './widget-285e2192.js';
import './QueryTask-b0a64993.js';
import './featureConversionUtils-a3d8ec70.js';
import './Task-634f7f0c.js';
import './languageUtils-884f50f9.js';
import './_commonjsHelpers-321aa363.js';
import './number-18a63da8.js';
import './FeatureLayer-d0cffc77.js';
import './HeightModelInfo-d5d3aa1e.js';
import './APIKeyMixin-8575f837.js';
import './ArcGISService-7e7b6abe.js';
import './BlendLayer-324633cc.js';
import './_commonjsHelpers-020ca939.js';
import './CustomParametersMixin-a86b0825.js';
import './labelingInfo-25767b21.js';
import './FeatureReductionCluster-71a4b0f9.js';
import './commonProperties-dc6e2688.js';
import './OperationalLayer-4ec71ac3.js';
import './OrderedLayer-c71463ea.js';
import './PortalLayer-1931d936.js';
import './RefreshableLayer-1f637573.js';
import './ScaleRangeLayer-e13c0aef.js';
import './TemporalLayer-53bb7671.js';
import './TimeInfo-eeca5f4b.js';
import './FeatureType-b8b87e07.js';
import './fieldProperties-49d5cbad.js';
import './FieldsIndex-a1139706.js';
import './LayerFloorInfo-b956bff1.js';
import './styleUtils-d505ace0.js';
import './popupUtils-74d35ca3.js';
import './utils-0c74ca00.js';
import './ItemCache-f1121cd2.js';
import './utils-86b5682d.js';
import './TileStore-07b000ac.js';
import './TileKey-a7cf75b8.js';
import './quickselect-ccfd8cff.js';
import './TileInfo-70467c72.js';
import './Scheduler-69870efa.js';
import './unitBezier-0f2e6a45.js';
import './vec2f64-503345b4.js';
import './TileStrategy-94fc5f8a.js';
import './screenshotUtils-9bdc6cab.js';
import './capabilities-7c6ba5e3.js';
import './Container-1e7079ff.js';
import './Texture-2c125101.js';
import './WGLContainer-4baf605d.js';
import './definitions-08701efa.js';
import './VertexArrayObject-11463d40.js';
import './Utils-03a18796.js';
import './number-237bc27c.js';
import './ShaderCompiler-054f6091.js';
import './config-768959de.js';
import './GeometryUtils-09c2f88c.js';
import './MaterialKey-80102021.js';
import './pixelUtils-0e1dbd21.js';
import './earcut-05cd758b.js';
import './shapingUtils-2219035b.js';
import './Rect-988189d5.js';
import './projectionSupport-0059ef91.js';
import './json-cfa039ad.js';
import './CIMSymbolHelper-18d731f4.js';
import './GeometryUtils-93aa6536.js';
import './FeatureContainer-19283e49.js';
import './TileContainer-74118d41.js';
import './visualVariablesUtils-99d1ff9b.js';
import './visualVariablesUtils-54c52a4e.js';
import './Matcher-717b1acb.js';
import './tileUtils-ac93b895.js';
import './TileClipper-5cd01f72.js';
import './cimAnalyzer-65b5b691.js';
import './quantizationUtils-9e335e8b.js';
import './cimSymbolUtils-7737b0ac.js';
import './devEnvironmentUtils-c5b59f3c.js';
import './schemaUtils-008b3be6.js';
import './clusterUtils-65e289cf.js';
import './MD5-6027098a.js';
import './util-487bac14.js';
import './ComputedAttributeStorage-ffb3e009.js';
import './FeatureSetReader-cc8f6cc6.js';
import './centroid-b9a46ae8.js';
import './vec3f32-f2e27abe.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
class C{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[];}}let j=class extends(l(u)){constructor(){super(...arguments),this._handles=new u$1,this._bitmapIndex=new Map,this._mapImageContainer=new t,this._kmlVisualData=new C,this.allVisiblePoints=new c,this.allVisiblePolylines=new c,this.allVisiblePolygons=new c,this.allVisibleMapImages=new S;}async hitTest(e,i){var t,s,a;return (await Promise.all([null==(t=this._pointsView)?void 0:t.hitTest(e),null==(s=this._polylinesView)?void 0:s.hitTest(e),null==(a=this._polygonsView)?void 0:a.hitTest(e)])).flat().filter((e=>!!e&&(e.layer=this.layer,e.sourceLayer=this.layer,!0)))}update(e){this._polygonsView&&this._polygonsView.processUpdate(e),this._polylinesView&&this._polylinesView.processUpdate(e),this._pointsView&&this._pointsView.processUpdate(e);}attach(){this._handles.add([this.allVisibleMapImages.on("change",(e=>{e.added.forEach((e=>this._addMapImage(e))),e.removed.forEach((e=>this._removeMapImage(e)));}))]),this.container.addChild(this._mapImageContainer),this._polygonsView=new it({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new i(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new it({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new i(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new it({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new i(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.watch("layer.visibleSublayers",(e=>{for(const[i,t]of this._kmlVisualData.allSublayers)t.visibility=0;for(const i of e){const e=this._kmlVisualData.allSublayers.get(i.id);e&&(e.visibility=1);}this._refreshCollections();})),this._fetchingPromise=this._fetchService().then((()=>{this._fetchingPromise=null,this.notifyChange("updating");}));}detach(){this._handles.removeAll(),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView&&(this._polygonsView.destroy(),this._polygonsView=null),this._polylinesView&&(this._polylinesView.destroy(),this._polylinesView=null),this._pointsView&&(this._pointsView.destroy(),this._pointsView=null);}moveStart(){}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange();}moveEnd(){}isUpdating(){return null!=this._fetchingPromise||this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(e){(this.view.spatialReference.isWGS84||this.view.spatialReference.isWebMercator)&&C$1(e.href,{responseType:"image"}).then((({data:i})=>{let t=M$1.fromJSON(e.extent);g(t,this.view.spatialReference)&&(t=M$2(t,this.view.spatialReference));const s=new g$1(i,"standard");s.x=t.xmin,s.y=t.ymax,s.resolution=t.width/i.naturalWidth,s.rotation=e.rotation,this._mapImageContainer.addChild(s),this._bitmapIndex.set(e,s);}));}async _getViewDependentUrl(e,t){const{viewFormat:s,viewBoundScale:a$1,httpQuery:h}=e;if(r(s)){if(t$1(t))throw new Error("Loading this network link requires a view state.");let p;if(await O(),r(a$1)&&1!==a$1){const e=new M$1(t.extent);e.expand(a$1),p=e;}else p=t.extent;p=Q(p,k.WGS84);const w=Q(p,k.WebMercator),g=p.xmin,u=p.xmax,_=p.ymin,V=p.ymax,f=t.size[0]*t.pixelRatio,v=t.size[1]*t.pixelRatio,S=Math.max(w.width,w.height),I={"[bboxWest]":g.toString(),"[bboxEast]":u.toString(),"[bboxSouth]":_.toString(),"[bboxNorth]":V.toString(),"[lookatLon]":p.center.x.toString(),"[lookatLat]":p.center.y.toString(),"[lookatRange]":S.toString(),"[lookatTilt]":"0","[lookatHeading]":t.rotation.toString(),"[lookatTerrainLon]":p.center.x.toString(),"[lookatTerrainLat]":p.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":p.center.x.toString(),"[cameraLat]":p.center.y.toString(),"[cameraAlt]":S.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":f.toString(),"[vertPixels]":v.toString(),"[terrainEnabled]":"0","[clientVersion]":a,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},x=e=>{for(const i in e)for(const t in I)e[i]=e[i].replace(t,I[t]);},P=b(s);x(P);let k$1={};r(h)&&(k$1=b(h),x(k$1));const C=o(e.href);C.query={...C.query,...P,...k$1};return `${C.path}?${C$2(P)}`}return e.href}async _fetchService(){const e=new C;await this._loadVisualData(this.layer.url,e),this._kmlVisualData=e,this._refreshCollections();}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e)));}_isSublayerVisible(e){const i=this._kmlVisualData.allSublayers.get(e);return !!i.visibility&&(-1===i.parentFolderId||this._isSublayerVisible(i.parentFolderId))}_loadVisualData(e,i){return this._fetchParsedKML(e).then((async e=>{for(const t of e.sublayers){i.allSublayers.set(t.id,t);const e=t.points?await b$1(t.points):[],s=t.polylines?await b$1(t.polylines):[],a=t.polygons?await b$1(t.polygons):[],o=t.mapImages||[];if(i.allPoints.push(...e.map((e=>({item:e,sublayerId:t.id})))),i.allPolylines.push(...s.map((e=>({item:e,sublayerId:t.id})))),i.allPolygons.push(...a.map((e=>({item:e,sublayerId:t.id})))),i.allMapImages.push(...o.map((e=>({item:e,sublayerId:t.id})))),t.networkLink){const e=await this._getViewDependentUrl(t.networkLink,this.view.state);await this._loadVisualData(e,i);}}}))}_fetchParsedKML(e){return g$2(e,this.view.spatialReference,this.layer.refreshInterval).then((e=>d(e.data)))}_removeMapImage(e){const i=this._bitmapIndex.get(e);i&&(this._mapImageContainer.removeChild(i),this._bitmapIndex.delete(e));}};e([d$1()],j.prototype,"_pointsView",void 0),e([d$1()],j.prototype,"_polylinesView",void 0),e([d$1()],j.prototype,"_polygonsView",void 0),e([d$1()],j.prototype,"_fetchingPromise",void 0),e([d$1()],j.prototype,"updating",void 0),j=e([i$1("esri.views.2d.layers.KMLLayerView2D")],j);const M=j;

export default M;
