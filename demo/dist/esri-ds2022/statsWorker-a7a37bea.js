import { T as a$1, aS as k, c as s$1, _ as B, e1 as J, V as r } from './vec2f32-96e18450.js';
import { T, s as s$2, m as m$1, c as c$1, V, g as g$1, h as h$1, y as y$1, D, z } from './utils-23e64aa0.js';
import './generateRendererUtils-d088b457.js';
import './colorRamps-44ecefda.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
let s=null;async function a(e,t){if(!t)return [];const i=e.field,o=e.valueExpression,a=e.normalizationType,f=e.normalizationField,c=e.normalizationTotal,u=[],d=e.viewInfoParams;let p=null,m=null;if(o){if(!s){const{arcadeUtils:e}=await a$1();s=e;}p=s.createFunction(o),m=d&&s.getViewInfo({viewingMode:d.viewingMode,scale:d.scale,spatialReference:new k(d.spatialReference)});}return t.forEach((e=>{const t=e.attributes;let n;if(o){const t=s.createExecContext(e,m);n=s.executeFunction(p,t);}else t&&(n=t[i]);if(a&&isFinite(n)){const e=t&&parseFloat(t[f]);n=T(n,a,e,c);}u.push(n);})),u}function f$1(e){const t=e.field,n=e.normalizationType,i=e.normalizationField;let o;return "field"===n?o="(NOT "+i+" = 0)":"log"!==n&&"natural-log"!==n&&"square-root"!==n||(o=`(${t} > 0)`),o}function c(t,n){return new s$1(t,n)}function u$1(e,t,n){const i=null!=t?e+" >= "+t:"",o=null!=n?e+" <= "+n:"";let r="";return r=i&&o?m(i,o):i||o,r?"("+r+")":""}function d$1(e,t,n,i){let o=null;return t?t.name!==e.objectIdField&&-1!==i.indexOf(t.type)||(o=c(n,"'field' should be one of these types: "+i.join(","))):o=c(n,"'field' is not defined in the layer schema"),o}function p$1(e,t,n){let r;return t?t.name!==e.objectIdField&&B(t)||(r=c(n,"'field' should be one of these numeric types: "+J.join(","))):r=c(n,"'field' is not defined in the layer schema"),r}function m(e,n){let i=r(e)?e:"";return r(n)&&n&&(i=i?"("+i+") AND ("+n+")":n),i}function y(e,t,n){const i=h({layer:e,fields:t});if(i.length)return c(n,"Unknown fields: "+i.join(", ")+". You can only use fields defined in the layer schema");const o=g({layer:e,fields:t});return o.length?c(n,"Unsupported fields: "+o.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}function h(e){const t=e.layer;return e.fields.filter((e=>!t.getField(e)))}function g(e){const t=e.layer;return e.fields.filter((e=>{const n=t.getFieldUsageInfo(e);return !n||!n.supportsStatistics}))}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
async function u(l){const{attribute:t,features:r}=l,{normalizationType:s,normalizationField:m,minValue:u,maxValue:d,fieldType:f}=t,p=await a({field:t.field,valueExpression:t.valueExpression,normalizationType:s,normalizationField:m,normalizationTotal:t.normalizationTotal,viewInfoParams:t.viewInfoParams},r),v=s$2({normalizationType:s,normalizationField:m,minValue:u,maxValue:d}),z={value:.5,fieldType:f},c="esriFieldTypeString"===f?m$1({values:p,supportsNullCount:v,percentileParams:z}):c$1({values:p,minValue:u,maxValue:d,useSampleStdDev:!s,supportsNullCount:v,percentileParams:z});return V(c,"esriFieldTypeDate"===f)}async function d(i){const{attribute:n,features:e}=i,o=await a({field:n.field,valueExpression:n.valueExpression,viewInfoParams:n.viewInfoParams},e),r=g$1(o);return h$1(r,n.domain,n.returnAllCodedValues)}async function f(i){const{attribute:n,features:e}=i,{field:o,normalizationType:l,normalizationField:t,normalizationTotal:m,classificationMethod:u}=n,d=await a({field:o,valueExpression:n.valueExpression,normalizationType:l,normalizationField:t,normalizationTotal:m,viewInfoParams:n.viewInfoParams},e),f=y$1(d,{field:o,normalizationType:l,normalizationField:t,normalizationTotal:m,classificationMethod:u,standardDeviationInterval:n.standardDeviationInterval,numClasses:n.numClasses,minValue:n.minValue,maxValue:n.maxValue});return D(f,u)}async function p(i){const{attribute:n,features:e}=i,{field:o,normalizationType:l,normalizationField:t,normalizationTotal:r,classificationMethod:s}=n,u=await a({field:o,valueExpression:n.valueExpression,normalizationType:l,normalizationField:t,normalizationTotal:r,viewInfoParams:n.viewInfoParams},e);return z(u,{field:o,normalizationType:l,normalizationField:t,normalizationTotal:r,classificationMethod:s,standardDeviationInterval:n.standardDeviationInterval,numBins:n.numBins,minValue:n.minValue,maxValue:n.maxValue})}

export { f as classBreaks, p as histogram, u as summaryStatistics, d as uniqueValues };
